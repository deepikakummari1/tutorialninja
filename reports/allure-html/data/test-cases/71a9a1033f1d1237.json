{"uid":"71a9a1033f1d1237","name":"test_login_ddt","fullName":"test_003_login_ddt.Test_LoginDDT#test_login_ddt","historyId":"a3c770be107c2ac3adce4d01b839e0f3","time":{"start":1751277938041,"stop":1751277993910,"duration":55869},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_003_login_ddt.Test_LoginDDT object at 0x000001D8170B01A0>\nsetup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"3988bef24355e25827fc77eecb7eb77c\")>\n\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.regression\n    def test_login_ddt(self,setup):\n        self.logger.info(\"********* Test Login DDT Started *********\")\n        self.rows = XLUtils.getRowCount(self.path,\"Sheet1\")\n        lst_status = []\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"********* Launching Application *********\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(10)\n        self.hp = HomePage(self.driver)\n        self.lp = LoginPage(self.driver)\n        self.ma = MyAccountPage(self.driver)\n        for r in range(2,self.rows+1):\n            self.hp.clickMyAccount()\n            self.hp.clickLogin()\n    \n            self.email = XLUtils.readData(self.path,\"Sheet1\",r,1)\n            self.password = XLUtils.readData(self.path, \"Sheet1\", r, 2)\n            self.exp = XLUtils.readData(self.path, \"Sheet1\", r, 3)\n    \n            self.lp.setEmail(self.email)\n            self.lp.setPassword(self.password)\n            self.lp.clickLogin()\n            time.sleep(2)\n    \n            self.targetpage = self.lp.isMyAccountPageExists()\n    \n            if self.exp == \"Valid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Pass\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Fail\")\n    \n            elif self.exp == \"Invalid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Fail\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Pass\")\n        if \"Fail\" not in lst_status:\n            assert True\n        else:\n>           assert False\nE           assert False\n\ntestCases\\test_003_login_ddt.py:65: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1751277935732,"stop":1751277935732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1751277935732,"stop":1751277938041,"duration":2309},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_003_login_ddt.Test_LoginDDT object at 0x000001D8170B01A0>\nsetup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"3988bef24355e25827fc77eecb7eb77c\")>\n\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.regression\n    def test_login_ddt(self,setup):\n        self.logger.info(\"********* Test Login DDT Started *********\")\n        self.rows = XLUtils.getRowCount(self.path,\"Sheet1\")\n        lst_status = []\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"********* Launching Application *********\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(10)\n        self.hp = HomePage(self.driver)\n        self.lp = LoginPage(self.driver)\n        self.ma = MyAccountPage(self.driver)\n        for r in range(2,self.rows+1):\n            self.hp.clickMyAccount()\n            self.hp.clickLogin()\n    \n            self.email = XLUtils.readData(self.path,\"Sheet1\",r,1)\n            self.password = XLUtils.readData(self.path, \"Sheet1\", r, 2)\n            self.exp = XLUtils.readData(self.path, \"Sheet1\", r, 3)\n    \n            self.lp.setEmail(self.email)\n            self.lp.setPassword(self.password)\n            self.lp.clickLogin()\n            time.sleep(2)\n    \n            self.targetpage = self.lp.isMyAccountPageExists()\n    \n            if self.exp == \"Valid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Pass\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Fail\")\n    \n            elif self.exp == \"Invalid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Fail\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Pass\")\n        if \"Fail\" not in lst_status:\n            assert True\n        else:\n>           assert False\nE           assert False\n\ntestCases\\test_003_login_ddt.py:65: AssertionError","steps":[],"attachments":[{"uid":"912d2cf4185a4b51","name":"log","source":"912d2cf4185a4b51.txt","type":"text/plain","size":433}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"setup::0","time":{"start":1751277994173,"stop":1751277996483,"duration":2310},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"minor"},{"name":"tag","value":"regression"},{"name":"suite","value":"test_003_login_ddt"},{"name":"subSuite","value":"Test_LoginDDT"},{"name":"host","value":"DESKTOP-T1N2AJN"},{"name":"thread","value":"10736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_003_login_ddt"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["regression"]},"source":"71a9a1033f1d1237.json","parameterValues":[]}